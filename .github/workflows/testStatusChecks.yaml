name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - name: Set up test database
      run: node config/setup-test-db.js
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{secrets.DB_PORT}}
        USER: ${{secrets.root}}
        PASSWORD: Parna.coM001
    - name: Run Jest tests
      run: npm test
      env:
        APP_PORT: 8080
        DB_PORT: 3306
        DB_HOST: 127.0.0.1
        USER: root
        PASSWORD: Parna.coM001
        DB_NAME: test_db
    - name: Run integration tests
      run: npm run test:integration
      env:
        APP_PORT: 8080
        DB_PORT: 3306
        DB_HOST: 127.0.0.1
        USER: root
        PASSWORD: Parna.coM001
        DB_NAME: test_db
